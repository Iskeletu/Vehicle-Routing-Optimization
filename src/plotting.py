"""
Provides a function to visualize routing paths in a 2D coordinate grid.

This module uses matplotlib to plot the sequence of visited points as a closed loop,
representing a route generated by an optimization algorithm such as a genetic algorithm.

Author: FÃ¡bio Gandini  
Date: June 2025
"""

# External Modules:
import numpy as np
import matplotlib.pyplot as mpl


def plot_route(route: list[int], points: np.ndarray) -> mpl.Figure:
    """
    Plots the route on a 2D grid by connecting the given points in the specified order.

    Parameters:
        - `route: list[int]` -> A list of point indices representing the visitation order.
        - `points: numpy.ndarray` -> A 2D array of coordinates (x, y) for each point.

    Returns:
        - The generated plot figure as a `matplotlib.Figure` object.
    """

    ordered_points = points[route+[route[0]]]  # Ensures the loop is closed.

    fig, ax = mpl.subplots()
    ax.plot(ordered_points[:, 0], ordered_points[:, 1], 'o-', color='green')

    for i, (x, y) in enumerate(points):
        ax.text(x + 1, y + 1, str(i), fontsize=9)

    ax.set_title("Best Route (Initial Population)")
    ax.set_xlabel("X")
    ax.set_ylabel("Y")
    ax.grid(True)
    ax.set_aspect("equal")
    return fig


def display_route(_:mpl.Figure) -> None:
    """
    Displays a MatPlotLib figure object containing a plotted route.

    Parameters:
        - `fig: matplotlib.Figure` -> A MatPlotLib figure object returned by `plot_route()`.
    """

    mpl.show()


# This is NOT a script file.
if __name__ == '__main__':
    raise RuntimeError("This module is not a standalone script.")
